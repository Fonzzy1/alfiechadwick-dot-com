<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alfie Chadwick</title>
    <link>/</link>
    <description>Recent content on Alfie Chadwick</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Predicting the 2023 Hottest 100</title>
      <link>/2024/01/26/predicting-the-2023-hottest-100/</link>
      <pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/2024/01/26/predicting-the-2023-hottest-100/</guid>
      <description>Like many Australians, I spend my last Saturday in January getting hyped for the Triple J Hottest 100 countdown. And for the last few years, there’s been a project run by 100 Warm Tunas that has been really accurate at predicting the results of the countdown. Warm tuna makes predictions by scraping social media posts for peoples votes and then collating them as a sample of all votes, and although this is very effective, I feel misses the point a bit in trying to work out why a song is popular.</description>
    </item>
    <item>
      <title>Making my ODE solver solve ODEs</title>
      <link>/2024/01/12/making-my-ode-solver-solve-odes/</link>
      <pubDate>Fri, 12 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/2024/01/12/making-my-ode-solver-solve-odes/</guid>
      <description>After writing out the last post where I wrote out a python library for using an improved version of Euler’s method to solve ODEs. But so far, we haven’t been solving ODES, instead we have just been taking an initial value and iterating it over the length of a domain. To To make the ODE estimator work, we need to ensure that the conditions of the ODE are met at each step.</description>
    </item>
    <item>
      <title>DIY Dev-Containers</title>
      <link>/2024/01/07/diy-dev-containers/</link>
      <pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/2024/01/07/diy-dev-containers/</guid>
      <description>Why we use Dev-Containers What I want The Beginnings Docker In Docker Secrets Management Portability Wrapping it up Like most developers, I spend an inordinate amount of time dealing with my local installations and dependencies. When working on multiple projects, it is not uncommon to encounter conflicting versions of dependencies, and while virtual environments and package managers like Node Package Manager help to mitigate this issue, they often fall short.</description>
    </item>
    <item>
      <title>Making a Python Library to solve differential Equations</title>
      <link>/2023/12/29/making-a-python-library-to-solve-differential-equations/</link>
      <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
      <guid>/2023/12/29/making-a-python-library-to-solve-differential-equations/</guid>
      <description>After having the initial idea I wrote up in a previous post, I thought it was a good idea to turn it into a python library so that I can use it as part of my other projects.&#xA;It also gives me a chance to see numerically how well the new method works compared to the Euler method.&#xA;First Steps So in the last post I set out the method such that: \[ \begin{bmatrix} y(x+h)\\ y&amp;#39;(x+h)\\ y&amp;#39;&amp;#39;(x+h)\\ .</description>
    </item>
    <item>
      <title>A new way to look at Categories in Hugo Blogs</title>
      <link>/2023/12/28/a-new-way-to-look-at-categories-in-hugo-blogs/</link>
      <pubDate>Thu, 28 Dec 2023 00:00:00 +0000</pubDate>
      <guid>/2023/12/28/a-new-way-to-look-at-categories-in-hugo-blogs/</guid>
      <description>This site is built through blogdown, which is a marvellous little R package that integrates Hugo sites into a R workflow. A nice thing about Hugo sites are the large number of themes available to quickly integrate with your site to change the vibe. My theme is mostly just a recolored version of the hello-friend-ng theme, using catppuccin for the colors.&#xA;My only gripe with the theme is that it uses a default list for all types of content.</description>
    </item>
    <item>
      <title>Using Taylor Series to Improve the Euler Method</title>
      <link>/2023/12/18/using-taylor-series-to-improve-the-euler-method/</link>
      <pubDate>Mon, 18 Dec 2023 00:00:00 +0000</pubDate>
      <guid>/2023/12/18/using-taylor-series-to-improve-the-euler-method/</guid>
      <description>Euler’s Method Higher Order ODEs Taylor Series Putting it together Euler’s Method Euler’s method is a classic way of approximating first-order differential equations. In short, it uses the derivative of a function and starting condition to estimate the value of the function a short distance from the starting point.&#xA;This is commonly written as:&#xA;\[ \frac{dy}{dx} = f(x, y) \] \[ y(x+h) = y(x) + hf(x, y(x)) + \epsilon \] \[ \lim_{h \to 0} |\epsilon| = 0 \]</description>
    </item>
    <item>
      <title>Taylor Series approximations of ODEs: The Algorithm</title>
      <link>/ideas/3-ode-solver-implementation/ode-solve/</link>
      <pubDate>Sat, 16 Dec 2023 00:00:00 +0000</pubDate>
      <guid>/ideas/3-ode-solver-implementation/ode-solve/</guid>
      <description>import math import numpy as np import pandas as pd import matplotlib.pyplot as plt def c(a, cond, n): if n == 0: return cond; if n == 1: return a * math.sin(cond) return cond int_x = 0 int_y = 2 # 2 depth = 2 step = 0.001 d_min = -3 d_max = 3 # 2.1 Set up output space d_min_scale = int(round(d_min / step)) d_max_scale = int(round(d_max / step)) ls_points = list(range(d_min_scale, d_max_scale)) ls_points = list(map(lambda x: x * step, ls_points)) df = pd.</description>
    </item>
    <item>
      <title>Modeling Drug Use in Communities</title>
      <link>/2023/10/22/modeling-drug-use-in-communities/</link>
      <pubDate>Sun, 22 Oct 2023 00:00:00 +0000</pubDate>
      <guid>/2023/10/22/modeling-drug-use-in-communities/</guid>
      <description>Preface Introduction Aim Method Initial Model: SIR SUAR Model SAUR Model with age Simplified SUAR Model with age Results Discussion Conclusion References Appendix Appendix 1 : Stationary points of SIR model Appendix 2 : Stationary points of SUAR Appendix 3: Critical Points of Simplified SUAR model Appendix 4: Matlab code for generating conditional Stationary Points Appendix 5: Python code for simulating SIR model Appendix 6: Python code for simulating SUAR model Appendix 7: Python code for simulating 20 compartment SUAR model Appendix 8: Python code for simulating 5 compartment SUAR model Appendix 9: Python code for simulating 5 compartment dimensionless SUAR model Preface This was written as a University project but I’m pretty happy with how it turned out.</description>
    </item>
    <item>
      <title>Taylor Series approximations of ODEs: The Algorithm</title>
      <link>/ideas/ode-solver/ode-solve/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      <guid>/ideas/ode-solver/ode-solve/</guid>
      <description>Euler’s Method How to expand the Euler method? Taylor Series How to make the approximation fit the ODE The Final Algorithm If you ever start doing university level maths, physics, chemistry or even economics, you will most likely start running into differential equations. These are equations that describe functions in terms of their derivatives. Normally in these classes, at least at the start, all the problems are solvable by hand with some fairly rudimentary algebra and calculus.</description>
    </item>
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Fri, 23 Apr 2021 21:48:51 -0700</pubDate>
      <guid>/about/</guid>
      <description>Hiya, I&amp;rsquo;m Alfie a techie working in Melbourne, Australia. I often find myself writing up little projects in my spare time so I may as well put them out there.</description>
    </item>
  </channel>
</rss>
