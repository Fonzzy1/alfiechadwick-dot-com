<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alfie Chadwick</title>
    <link>/</link>
    <description>Recent content on Alfie Chadwick</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Dec 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Taylor Series approximations of ODEs: The Algorithm</title>
      <link>/2023/12/16/taylor-series-approximations-of-odes-the-algorithm/</link>
      <pubDate>Sat, 16 Dec 2023 00:00:00 +0000</pubDate>
      <guid>/2023/12/16/taylor-series-approximations-of-odes-the-algorithm/</guid>
      <description>import math import numpy as np import pandas as pd import matplotlib.pyplot as plt def c(a, cond, n): if n == 0: return cond; if n == 1: return a * math.sin(cond) return cond int_x = 0 int_y = 2 # 2 depth = 2 step = 0.001 d_min = -3 d_max = 3 # 2.1 Set up output space d_min_scale = int(round(d_min / step)) d_max_scale = int(round(d_max / step)) ls_points = list(range(d_min_scale, d_max_scale)) ls_points = list(map(lambda x: x * step, ls_points)) df = pd.</description>
    </item>
    <item>
      <title>Modeling Drug Use in Communities</title>
      <link>/2023/10/22/modeling-drug-use-in-communities/</link>
      <pubDate>Sun, 22 Oct 2023 00:00:00 +0000</pubDate>
      <guid>/2023/10/22/modeling-drug-use-in-communities/</guid>
      <description>Preface Introduction Aim Method Initial Model: SIR SUAR Model SAUR Model with age Simplified SUAR Model with age Results Discussion Conclusion References Appendix Appendix 1 : Stationary points of SIR model Appendix 2 : Stationary points of SUAR Appendix 3: Critical Points of Simplified SUAR model Appendix 4: Matlab code for generating conditional Stationary Points Appendix 5: Python code for simulating SIR model Appendix 6: Python code for simulating SUAR model Appendix 7: Python code for simulating 20 compartment SUAR model Appendix 8: Python code for simulating 5 compartment SUAR model Appendix 9: Python code for simulating 5 compartment dimensionless SUAR model Preface Big thanks to my collaborators Kevin Dai and Chrysovalantis Thomopoulos from Monash University.</description>
    </item>
    <item>
      <title>Taylor Series approximations of ODEs: The Algorithm</title>
      <link>/2023/05/18/taylor-series-approximations-of-odes-the-algorithm/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      <guid>/2023/05/18/taylor-series-approximations-of-odes-the-algorithm/</guid>
      <description>Eulerâ€™s Method How to expand the Euler method? Taylor Series How to make the approximation fit the ODE The Final Algorithm If you ever start doing university level maths, physics, chemistry or even economics, you will most likely start running into differential equations. These are equations that describe functions in terms of their derivatives. Normally in these classes, at least at the start, all the problems are solvable by hand with some fairly rudimentary algebra and calculus.</description>
    </item>
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Fri, 23 Apr 2021 21:48:51 -0700</pubDate>
      <guid>/about/</guid>
      <description>This is a place that I use to show off the projects that I work on. There&amp;rsquo;s going to be a lot of weird thing&amp;rsquo;s that come out of problems that I come up with in my every day life, and the solutions are fun optimisation issues that are sometimes pretty cool.&#xA;If you ever want to talk to me my email is alfiechadwick@hotmail.com or shoot me a message on linkedin.</description>
    </item>
  </channel>
</rss>
